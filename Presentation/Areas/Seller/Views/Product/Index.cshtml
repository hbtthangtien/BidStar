@using Application.DTOs.Product
@using Domain.Enum
@model IEnumerable<ProductDTO>
@{
    ViewData["Title"] = "Manage Products";
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/productHub")
            .build();

        connection.on("ReceiveProductUpdate", function () {
            location.reload();
        });

        connection.start().catch(err => console.error(err.toString()));
    </script>
}

<div class="container py-5">
    <div class="text-center mb-5">
        <h2 class="fw-bold">🎯 Manage Your Auction Products</h2>
        <p class="text-muted">Track and control your auction listings easily.</p>
        <a asp-action="Create" class="btn btn-primary fw-bold mt-3">
            <i class="bi bi-plus-circle me-1"></i> Create New Product
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center shadow">
            <i class="bi bi-box"></i> You haven't listed any products yet.
            <a asp-action="Create" class="fw-bold"> Click here to create one</a>.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle shadow-sm">
                <thead class="table-primary">
                    <tr class="text-center">
                        <th>#</th>
                        <th>Image</th>
                        <th>Name</th>
                        <th>Start Price</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="text-center">
                            <td class="fw-semibold">@item.Id</td>
                            <td>
                                <img src="@item.ImageUrl" alt="Image" class="rounded" style="width: 80px; height: 60px; object-fit: cover; border: 2px solid #dee2e6;" />
                            </td>
                            <td class="text-start">
                                <strong>@item.Name</strong><br />
                                <small class="text-muted">@item.Description?.Substring(0, Math.Min(50, item.Description.Length))...</small>
                            </td>
                            <td class="text-success fw-bold">@String.Format("{0:N0}", item.StartPrice)₫</td>
                            <td>
                                <span class="badge bg-@GetStatusColor(item.ProductStatus)">@item.ProductStatus</span>
                            </td>
                            <td>@item.CreatedDate?.ToString("dd/MM/yyyy")</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info me-1">
                                    <i class="bi bi-eye"></i>
                                </a>
                                @if (item.ProductStatus == ProductStatus.Pending)
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning me-1">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                                        <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this product?')">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@functions {
    string GetStatusColor(ProductStatus status) => status switch
    {
        ProductStatus.Pending => "secondary",
        ProductStatus.Approved => "success",
        ProductStatus.Sold => "dark",
        ProductStatus.Cancelled => "danger",
        _ => "light"
    };
}
