@using Domain.Enum
@model IEnumerable<Application.DTOs.AuctionSession.AuctionSessionDTO>
@{
    ViewData["Title"] = "Auction Sessions";
}

<div class="container py-5">
    <h2 class="text-center fw-bold mb-4">🔥 Active Auction Sessions</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <i class="bi bi-hourglass-split"></i> No auction sessions available at the moment.
        </div>
    }
    else
    {
        <div class="row g-4" id="sessionList">
            @foreach (var session in Model)
            {
                <div class="col-md-4" id="session-@session.Id">
                    <div class="card shadow-sm h-100">
                        <img src="@session.Product.ImageUrl" class="card-img-top" style="height: 200px; object-fit: cover;" alt="@session.Product.Name">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@session.Product.Name</h5>
                            <p class="card-text text-muted mb-1">⏰ @session.StartTime.ToString("dd/MM/yyyy HH:mm") → @session.EndTime.ToString("dd/MM/yyyy HH:mm")</p>
                            <p class="card-text">💰 Current Price: <strong id="price-@session.Id">@session.CurrentPrice.ToString("N0")₫</strong></p>
                            <span class="badge bg-@GetStatusColor(session.AuctionSatus) mb-3" id="status-@session.Id">@session.AuctionSatus</span>
                            @if (session.AuctionSatus == AuctionSatus.Ongoing)
                            {
                                <button class="btn btn-gradient w-100 mt-2 btn-enter-auction"
                                        style="background: linear-gradient(90deg,#FFD580,#43C6DB); color:#121117;" data-auctionid="@session.Id">
                                    Đấu giá ngay
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-secondary w-100 mt-2" disabled>Đã kết thúc</button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        @if (ViewData["ErrorMessage"] != null)
        {
            <p style="color:red">@ViewData["ErrorMessage"]</p>
        }
    }
</div>
<div class="modal fade" id="joinErrorModal" tabindex="-1" aria-labelledby="joinErrorLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="joinErrorLabel">Không đủ số dư</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body" id="joinErrorMsg"></div>
            <div class="modal-footer">
                <a href="/Account/Profile" class="btn btn-warning">Nạp tiền ngay</a>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const hub = new signalR.HubConnectionBuilder()
            .withUrl("/auctionHub")
            .build();

        hub.on("UpdateSessionPrice", function (sessionId, newPrice) {
            const priceElem = document.getElementById("price-" + sessionId);
            if (priceElem) {
                priceElem.innerText = parseInt(newPrice).toLocaleString() + "₫";
            }
        });

        hub.on("UpdateSessionStatus", function () {
            location.reload();
        });
        hub.on("addSession", function () {
            location.reload();
        });
        hub.on("AuctionEnd", (auctionId) => {
            const spanStatus = document.getElementById("status-"+auctionId);
            const spanStatus = document.getElementById("linkDetail");
            spanStatus.className = "badge bg-dark mb-3";
            spanStatus.innerHTML = "🔍 View Session"
        });

        function getStatusColor(status) {
            switch (status) {
                case "Opening": return "success";
                case "Waiting": return "secondary";
                case "Closed": return "dark";
                case "Cancelled": return "danger";
                default: return "light";
            }
        }

        hub.start().catch(err => console.error(err.toString()));
    </script>
    <script>
        document.querySelectorAll('.btn-enter-auction').forEach(function (btn) {
            btn.addEventListener('click', function () {
                var auctionId = this.getAttribute('data-auctionid');
                fetch(`/AuctionSession/CheckBalance?auctionId=${auctionId}`)
                    .then(res => res.json())
                    .then(data => {
                        if (data.isEnough) {
                            // Đủ tiền → chuyển vào trang chi tiết auction
                            window.location.href = `/AuctionSession/Details/${auctionId}`;
                        } else {
                            // Không đủ tiền → hiện modal
                            document.getElementById('joinErrorMsg').textContent = data.message;
                            var modal = new bootstrap.Modal(document.getElementById('joinErrorModal'));
                            modal.show();
                        }
                    });
            });
        });
    </script>
}

@functions {
    string GetStatusColor(AuctionSatus status) => status switch
    {
        AuctionSatus.Scheduled => "secondary",
        AuctionSatus.Ongoing => "success",
        AuctionSatus.Completed => "dark",
        _ => "light"
    };
}